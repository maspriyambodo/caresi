function init_sidebar() {
    var a = function () {
        $RIGHT_COL.css('min-height', $(window).height());
        var a = $BODY.outerHeight(),
                b = $BODY.hasClass('footer_fixed') ? -10 : $FOOTER.height(),
                c = $LEFT_COL.eq(1).height() + $SIDEBAR_FOOTER.height(),
                d = a < c ? c : a;
        d -= $NAV_MENU.height() + b,
                $RIGHT_COL.css('min-height', d);
    };
    $SIDEBAR_MENU.find('a').on('click', function (b) {
        var c = $(this).parent();
        c.is('.active') ? (c.removeClass('active active-sm'), $('ul:first', c).slideUp(function () {
            a()
        })) : (c.parent().is('.child_menu') ? $BODY.is('.nav-sm') && ($SIDEBAR_MENU.find('li').removeClass('active active-sm'), $SIDEBAR_MENU.find('li ul').slideUp()) : ($SIDEBAR_MENU.find('li').removeClass('active active-sm'), $SIDEBAR_MENU.find('li ul').slideUp()), c.addClass('active'), $('ul:first', c).slideDown(function () {
            a()
        }))
    }),
            $MENU_TOGGLE.on('click', function () {
                $BODY.hasClass('nav-md') ? ($SIDEBAR_MENU.find('li.active ul').hide(), $SIDEBAR_MENU.find('li.active').addClass('active-sm').removeClass('active')) : ($SIDEBAR_MENU.find('li.active-sm ul').show(), $SIDEBAR_MENU.find('li.active-sm').addClass('active').removeClass('active-sm')),
                        $BODY.toggleClass('nav-md nav-sm'),
                        a()
            }),
            $SIDEBAR_MENU.find('a[href="' + CURRENT_URL + '"]').parent('li').addClass('current-page'),
            $SIDEBAR_MENU.find('a').filter(function () {
        return this.href == CURRENT_URL
    }).parent('li').addClass('current-page').parents('ul').slideDown(function () {
        a()
    }).parent().addClass('active'),
            $(window).smartresize(function () {
        a()
    }),
            a(),
            $.fn.mCustomScrollbar && $('.menu_fixed').mCustomScrollbar({
        autoHideScrollbar: !0,
        theme: 'minimal',
        mouseWheel: {
            preventDefault: !0
        }
    })
}
function gd(a, b, c) {
    return new Date(a, b - 1, c).getTime();
}
function onAddTag(a) {
    alert('Added a tag: ' + a)
}
function onRemoveTag(a) {
    alert('Removed a tag: ' + a)
}
function onChangeTag(a, b) {
    alert('Changed a tag: ' + b)
}
!function (a, b) {
    var c = function (a, b, c) {
        var d;
        return function () {
            function h() {
                c || a.apply(f, g),
                        d = null
            }
            var f = this,
                    g = arguments;
            d ? clearTimeout(d) : c && a.apply(f, g),
                    d = setTimeout(h, b || 100)
        }
    };
    jQuery.fn[b] = function (a) {
        return a ? this.bind('resize', c(a)) : this.trigger(b)
    }
}(jQuery, 'smartresize');
var CURRENT_URL = window.location.href.split('#') [0].split('?') [0],
        $BODY = $('body'),
        $MENU_TOGGLE = $('#menu_toggle'),
        $SIDEBAR_MENU = $('#sidebar-menu'),
        $SIDEBAR_FOOTER = $('.sidebar-footer'),
        $LEFT_COL = $('.left_col'),
        $RIGHT_COL = $('.right_col'),
        $NAV_MENU = $('.nav_menu'),
        $FOOTER = $('footer'),
        randNum = function () {
            return Math.floor(21 * Math.random()) + 20
        };
$(document).ready(function () {
    $('.collapse-link').on('click', function () {
        var a = $(this).closest('.x_panel'),
                b = $(this).find('i'),
                c = a.find('.x_content');
        a.attr('style') ? c.slideToggle(200, function () {
            a.removeAttr('style')
        }) : (c.slideToggle(200), a.css('height', 'auto')),
                b.toggleClass('fa-chevron-up fa-chevron-down')
    }),
            $('.close-link').click(function () {
        var a = $(this).closest('.x_panel');
        a.remove()
    })
}),
        $(document).ready(function () {
    $('[data-toggle="tooltip"]').tooltip({
        container: 'body'
    })
}),
        $('.progress .progress-bar') [0] && $('.progress .progress-bar').progressbar(),
        $(document).ready(function () {
    if ($('.js-switch') [0]) {
        var a = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
        a.forEach(function (a) {
            new Switchery(a, {
                color: '#26B99A'
            })
        })
    }
}),
        $(document).ready(function () {
    $('input.flat') [0] && $(document).ready(function () {
        $('input.flat').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        })
    })
}),
        $('table input').on('ifChecked', function () {
    checkState = '',
            $(this).parent().parent().parent().addClass('selected'),
            countChecked()
}),
        $('table input').on('ifUnchecked', function () {
    checkState = '',
            $(this).parent().parent().parent().removeClass('selected'),
            countChecked()
});
var checkState = '';
$('.bulk_action input').on('ifChecked', function () {
    checkState = '',
            $(this).parent().parent().parent().addClass('selected'),
            countChecked()
}),
        $('.bulk_action input').on('ifUnchecked', function () {
    checkState = '',
            $(this).parent().parent().parent().removeClass('selected'),
            countChecked()
}),
        $('.bulk_action input#check-all').on('ifChecked', function () {
    checkState = 'all',
            countChecked()
}),
        $('.bulk_action input#check-all').on('ifUnchecked', function () {
    checkState = 'none',
            countChecked()
}),
        $(document).ready(function () {
    $('.expand').on('click', function () {
        $(this).next().slideToggle(200),
                $expand = $(this).find('>:first-child'),
                '+' == $expand.text() ? $expand.text('-') : $expand.text('+')
    })
}),
        'undefined' != typeof NProgress && ($(document).ready(function () {
            NProgress.start()
        }), $(window).load(function () {
            NProgress.done()
        }));
var originalLeave = $.fn.popover.Constructor.prototype.leave;
$.fn.popover.Constructor.prototype.leave = function (a) {
    var c,
            d,
            b = a instanceof this.constructor ? a : $(a.currentTarget) [this.type](this.getDelegateOptions()).data('bs.' + this.type);
    originalLeave.call(this, a),
            a.currentTarget && (c = $(a.currentTarget).siblings('.popover'), d = b.timeout, c.one('mouseenter', function () {
                clearTimeout(d),
                        c.one('mouseleave', function () {
                            $.fn.popover.Constructor.prototype.leave.call(b, b)
                        })
            }))
},
        $('body').popover({
    selector: '[data-popover]',
    trigger: 'click hover',
    delay: {
        show: 50,
        hide: 400
    }
}),
        $(document).ready(function () {
            init_sidebar()
});